:imagesdir: images

= Living documentation in a DDD project

This a simple DDD project around the telecom aggregate

The maven plugin is use to generate dynamically the domain class diagram.
A simple mapping file is used to *translate the ubiquitous language* from technical names to business names.

== generated diagram :
image::diagram.png[]

== Generated glossary :
image::glossary.png[]

== Generated dictionary :
image::dictionary.png[]

== Domain object decoration with some annotation

[source,java]
----
@RootAggregate
@Glossary(id = 100)
public class Bill {
    [...]
}
----

Annotations are from dependency :

[source,xml]
----
<dependency>
    <groupId>ch.ifocusit.livingdoc</groupId>
    <artifactId>livingdoc-annotations</artifactId>
    <version>1.0-SNAPSHOT</version>
</dependency>
----

== Maven plugin configuration
[source,xml]
----
<plugin>
    <groupId>ch.ifocusit.livingdoc</groupId>
    <artifactId>livingdoc-maven-plugin</artifactId>
    <version>1.0-SNAPSHOT</version>
    <executions>
        <execution>
            <id>class-diagram</id>
            <phase>package</phase>
            <goals>
                <goal>diagram</goal>
            </goals>
            <configuration>
                <packageRoot>ch.ifocusit.telecom.domain</packageRoot>
                <onlyGlossary>true</onlyGlossary>
                <diagramType>plantuml</diagramType>
                <excludes>
                    <exclude>.*domain.common.*</exclude>
                </excludes>
            </configuration>
        </execution>
        <execution>
            <id>glossary</id>
            <phase>package</phase>
            <goals>
                <goal>glossary</goal>
            </goals>
        </execution>
        <execution>
            <id>dico</id>
            <phase>package</phase>
            <goals>
                <goal>dictionary</goal>
            </goals>
        </execution>
    </executions>
    <configuration>
        <glossaryMapping>src/docs/business-glossary.csv</glossaryMapping>
        <outputDirectory>${project.build.directory}/generated-docs</outputDirectory>
        <format>html</format>
    </configuration>
</plugin>
----
